swagger: "2.0"

info:
  title: Arcane Platform API
  description: "Arcane Platform API"
  version: "1.0.0"

host: ${GCP_API_HOST}

x-google-api-name: admin

schemes:
  - "https"

x-google-backend:
  address: "https://${GCP_BACKEND_HOST}"
  protocol: h2

paths:

  "/apps/admin/user":
    get:
      description: Get user status by email
      produces:
        - application/json
      operationId: "getUserStatusByEmail"
      parameters:
        - name: "email"
          in: query
          required: true
          type: string
      responses:
        200:
          description: "User is registered to platform"
          schema:
            $ref: '#/definitions/User'
        404:
          description: "User is not registered to platform"
      security:
        - firebase: [ ]

  "/apps/admin/users/{user-id}":
    get:
      description: Get user status
      produces:
        - application/json
      operationId: "getUserStatus"
      parameters:
        - name: "user-id"
          in: path
          required: true
          type: string
      responses:
        200:
          description: "User is registered to platform"
          schema:
            $ref: '#/definitions/User'
        404:
          description: "User is not registered to platform"
      security:
        - firebase: [ ]


definitions:

  User:
    type: object
    properties:
      userId:
        type: string
      analyticsId:
        type: string
    required:
      - userId
      - analyticsId


securityDefinitions:
  firebase:
    authorizationUrl: ""
    flow: "implicit"
    type: "oauth2"
    x-google-issuer: "https://securetoken.google.com/${GCP_PROJECT_ID}"
    x-google-jwks_uri: "https://www.googleapis.com/service_accounts/v1/metadata/x509/securetoken@system.gserviceaccount.com"
    x-google-audiences: "${GCP_PROJECT_ID}"